plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from("src/main/resources") {
        include "secret.properties"
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // ✅ YouTube API (정확히 호환되는 버전)
    implementation 'com.google.api-client:google-api-client:1.34.1'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'

    // ✅ 공통 유틸 및 JSON 처리
    implementation 'org.json:json:20240303'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // ✅ Spring Boot Starter Modules
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // ✅ JSP & JSTL (for JSP view rendering)
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // ✅ MyBatis + DB Driver
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ Servlet API (only needed if not already provided)
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // ✅ 외부 문자 인증 라이브러리 (쿨에스엠에스)
    implementation 'net.nurigo:sdk:4.2.7'

    // ✅ 개발용 및 빌드 설정
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ 테스트용
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


bootJar {
	enabled = false
}

war {
	enabled = true
}

tasks.named('test') {
	useJUnitPlatform()

}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-parameters"
}

